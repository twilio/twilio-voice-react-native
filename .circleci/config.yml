version: 2.1

###
# Parameters
###
parameters:
  pr_workflow:
    type: boolean
    default: true # by default pr workflow will get executed.
  release_workflow:
    type: boolean
    default: false
  release_command:
    type: string
    default: "echo \"no release-command specified\""

executors:
  default:
    docker:
      - image: cimg/node:lts
    working_directory: ~/project

orbs:
  android: circleci/android@2.1.2

commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project

  install-dependencies:
    steps:
      - run:
          name: Install dependencies
          command: |
            yarn run build:constants
            yarn install --cwd test/app --frozen-lockfile
            yarn install --frozen-lockfile
            yarn run build:errors

  setup-detox-dependencies:
    description: Setup environment for running test on detox
    steps:
      - run: npm install -g detox-cli && npm link detox
      - run: npm install -g jest && npm link jest

  setup-pods:
    description: Setup pods used for ios builds
    steps:
      - run:
          name: "Install Cocoapods 1.11.3"
          command: |
            sudo gem install cocoapods -v 1.11.3
      - run:
          name: Install cocoapods if cache does not exist
          command: |
            cd test/app/ios && pod install && cd ../../..

  simulator-dependencies:
    description: "Install iOS simulator dependencies"
    steps:
      - run:
          name: "Install applesimutils"
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew
            HOMEBREW_NO_AUTO_UPDATE=1 brew install applesimutils
  
  setup-e2e-creds:
    description: "Decode account credentials for e2e tests"
    steps:
      - run:
          name: "Decode creds"
          command: |
            echo "export const token ='$(curl $ACCESS_TOKEN_URL)'" >> test/app/src/e2e-tests-token.ts

  setup-e2e-google-services:
    description: Decode "google-services.json" for e2e tests
    steps:
      - run:
          name: Decode "google-services.json"
          command: |
            yarn run test:e2e:google-services
  
  clear-detox-cache:
    description: "Clears detox framework cache"
    steps:
      - run:
          working_directory: .
          name: Clear detox cache
          command: |
            cd test/app
            detox clean-framework-cache
            detox build-framework-cache
            cd ../..

  detox-build:
    description: Builds the app with given Detox configuration, as specified in detoxrc.json file
    parameters:
      configuration:
        description: The Detox configuration to build
        type: string
    steps:
      - run:
          name: Detox Build
          command: |
            cd test/app
            detox build -c <<parameters.configuration>>
            cd ../..
          no_output_timeout: 20m

  detox-test:
    description: Tests the app with the given Detox configuration, as specified in detoxrc.json file
    parameters:
      configuration:
        description: The Detox configuration to test
        type: string
      loglevel:
        default: "info"
        description: The Detox logging level to use. Default value - "info".
        enum: [ "fatal", "error", "warn", "info", "verbose", "trace" ]
        type: enum
      screenshots:
        default: "failing"
        description: Save screenshots of each test to artifacts directory. Default values - "failing"
        enum: [ "none", "failing", "all" ]
        type: enum
      artifacts:
        default: /tmp/artifacts
        description: Artifacts (logs, screenshots, etc) root directory.
        type: string
    steps:
      - run:
          name: Detox Test
          command: |
            cd test/app
            detox test --configuration <<parameters.configuration>> -l <<parameters.loglevel>> -a=<<parameters.artifacts>> --take-screenshots=<<parameters.screenshots>> --ci --forceExit --detectOpenHandles
            cd ../..

jobs:
  cache-install-dependencies:
    executor: default
    steps:
      - checkout
      - attach_project
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - restore_cache:
          keys:
            - dependencies-test-application-{{ checksum "test/app/package.json" }}
            - dependencies-test-application-
      - install-dependencies
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - save_cache:
          key: dependencies-test-application-{{ checksum "test/app/package.json" }}
          paths: test/app/node_modules
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    executor: default
    steps:
      - attach_project
      - run:
          name: Lint files
          command: |
            yarn run check:lint

  typescript:
    executor: default
    steps:
      - attach_project
      - run:
          name: Typecheck files
          command: |
            yarn run check:type

  unit-tests:
    executor: default
    steps:
      - attach_project
      - run:
          name: Run unit tests
          command: |
            yarn run check:test --coverage
      - store_artifacts:
          path: coverage
          destination: coverage

  build-package:
    executor: default
    steps:
      - attach_project
      - run:
          name: Build package
          command: |
            yarn run prepare

  run-release:
    executor:
      name: default
    parameters:
      dry-run:
        type: boolean
        default: true
    steps:
      - checkout
      - install-dependencies
      - when:
          condition: << parameters.dry-run >>
          steps:
            - run: echo "Will run \"<< pipeline.parameters.release_command >>\""
      - unless:
          condition: << parameters.dry-run >>
          steps:
            - run: << pipeline.parameters.release_command >>

  e2e-ios:
    macos:
      xcode: "12.5.1"
    parameters:
      detox_configuration:
        type: string
      artifacts_location:
        default: /tmp/artifacts
        type: string
    steps:
      - checkout
      - install-dependencies
      - setup-e2e-creds
      - setup-detox-dependencies
      - setup-pods
      - simulator-dependencies
      # run E2E tests
      - detox-build:
          configuration: <<parameters.detox_configuration>>
      - detox-test:
          configuration: <<parameters.detox_configuration>>
          artifacts: <<parameters.artifacts_location>>
      - store_artifacts:
          path: ./test/app/test-report.html

  e2e-android:
    machine:
      image: android:2022.07.1
    resource_class: large
    working_directory: ~/project
    parameters:
      detox_configuration:
        type: string
      artifacts_location:
        default: /tmp/artifacts
        type: string
    steps:
      - checkout
      - install-dependencies
      - setup-e2e-creds
      - setup-e2e-google-services
      - setup-detox-dependencies
      - android/create-avd:
          avd-name: rn-sdk-integration-tests-avd
          install: true
          system-image: system-images;android-30;default;x86_64
      - android/start-emulator:
          avd-name: rn-sdk-integration-tests-avd
          post-emulator-launch-assemble-command: ""
          restore-gradle-cache-post-emulator-launch: false
      # run E2E tests
      - detox-build:
         configuration: <<parameters.detox_configuration>>
      - detox-test:
         configuration: <<parameters.detox_configuration>>
         artifacts: <<parameters.artifacts_location>>
      - android/kill-emulators
      - store_artifacts:
         path: ./test/app/test-report.html

###
# Workflows
###
workflows:
  ###
  # Pull request workflow
  ###
  build-test:
    when:
          and:
            - equal: [true, << pipeline.parameters.pr_workflow >>]
            - equal: [false, << pipeline.parameters.release_workflow >>]
    jobs:
      - cache-install-dependencies
      - lint:
          requires:
            - cache-install-dependencies
      - typescript:
          requires:
            - cache-install-dependencies
      - unit-tests:
          requires:
            - cache-install-dependencies
      - build-package:
          requires:
            - cache-install-dependencies
      - e2e-ios:
          detox_configuration: ios.sim.release
          requires:
            - cache-install-dependencies
      - e2e-android:
          detox_configuration: android.emu.release
          requires:
            - cache-install-dependencies

  ###
  # Release workflow
  ###
  build-test-release:
    when: << pipeline.parameters.release_workflow >>
    jobs:
      - cache-install-dependencies
      - lint:
          requires:
            - cache-install-dependencies
      - typescript:
          requires:
            - cache-install-dependencies
      - unit-tests:
          requires:
            - cache-install-dependencies
      - build-package:
          requires:
            - cache-install-dependencies
      - run-release:
          name: Release dry run
          dry-run: true
      - hold:
          name: Release approval
          type: approval
      - run-release:
          context: vblocks-js
          name: Release
          dry-run: false
          requires:
            - Release approval
